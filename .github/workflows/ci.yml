name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Analyze project source
      run: flutter analyze
    
  build-android:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Build APK (obfuscated)
      run: flutter build apk --release --obfuscate --split-debug-info=build/symbols
    
    - name: Build App Bundle (obfuscated)
      run: flutter build appbundle --release --obfuscate --split-debug-info=build/symbols
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: build/app/outputs/flutter-apk/app-release.apk
    
    - name: Upload App Bundle artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-aab
        path: build/app/outputs/bundle/release/app-release.aab

  release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test, build-android]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: release-apk
        path: ./artifacts
    
    - name: Download App Bundle artifact
      uses: actions/download-artifact@v4
      with:
        name: release-aab
        path: ./artifacts
    
    - name: Get version from pubspec.yaml
      id: version
      run: |
        VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        release_name: Release v${{ steps.version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          ## Changes in this Release
          - Automated release from CI/CD pipeline
          - APK and App Bundle available for download
          
          ## Installation
          Download the APK file and install on your Android device.
          
          ## Features
          - Todo management with Eisenhower Matrix
          - Pomodoro timer with analytics
          - Time tracking and productivity insights
          - Advanced analytics dashboard
    
    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/app-release.apk
        asset_name: buildfork-optimized-v${{ steps.version.outputs.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive
    
    - name: Upload App Bundle to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/app-release.aab
        asset_name: buildfork-optimized-v${{ steps.version.outputs.VERSION }}.aab
        asset_content_type: application/octet-stream

